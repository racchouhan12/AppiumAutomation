import java.text.DateFormat
import java.text.SimpleDateFormat

group 'com.test.android'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}



project.ext.currentDateTime = new Date().format('MM-dd-HH-mm-ss')
project.ext.log4jProperties = "src/test/resources/log4j2.properties"

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'io.appium', name: 'java-client', version: '6.0.0'
    compile group: 'io.cucumber', name: 'cucumber-java8', version: '2.0.1'
    compile group: 'io.cucumber', name: 'cucumber-core', version: '2.0.1'
    compile group: 'commons-validator', name: 'commons-validator', version: '1.4.1'
    compile group: 'net.masterthought', name: 'cucumber-reporting', version: '4.7.0'
    testCompile group: 'io.cucumber', name: 'cucumber-junit', version: '2.0.1'
    testCompile 'io.cucumber:cucumber-java:4.3.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
    testImplementation 'io.cucumber:cucumber-java:4.3.1'
    testImplementation 'io.cucumber:cucumber-java8:4.3.1'
    implementation 'org.codehaus.groovy:groovy-all:2.4.15'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}
String reportPath;

task cucumber() {
    dependsOn assemble, compileTestJava
    def String tags = System.getenv('tag')
    reportPath = reportGeneration()
    String cucumberJSONPath = "json:" + reportPath + "/cucumber.json"
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--plugin',cucumberJSONPath,'--tags', tags,'--glue', 'com.test.stepdefinitions', 'src/test/resources']
        }
        javaexec {
            main = "com.test.utilities.Reporter"
            classpath =  sourceSets.test.output + sourceSets.test.runtimeClasspath
            args = [reportPath]
        }
    }
}
 String reportGeneration() {

        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd_HH_mm_ss");
        String reportFolderPath = System.getProperty( 'user.dir' ) + "/reports/reports_" + dateFormat.format(new Date());

        createFolder(reportFolderPath);

        return reportFolderPath;
}
 boolean createFolder(String nameOfFolder) {
     File file = new File(nameOfFolder);
     if (!file.exists()) {
         if (file.mkdir()) {
             System.out.println("Report Directory is created: " + nameOfFolder);
             return true;
         } else {
             System.out.println("Failed to create directory!");
             return false;
         }
     }
     return false;
 }





